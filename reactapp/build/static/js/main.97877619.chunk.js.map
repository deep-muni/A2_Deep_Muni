{"version":3,"sources":["components/navigation/Navigation.js","components/home/Home.js","components/register/Register.js","components/routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","state","showing","side_panel","navigate","toggle","bind","isShowing","this","setState","className","onClick","type","id","placeholder","map","item","index","key","name","to","url","require","Component","Home","Register","validation","un_err","fn_err","ln_err","dob_err","pass_err","cp_err","error","filled","initial","validate","register","e","target","value","Object","assign","document","getElementById","keys","some","val","history","push","setTimeout","htmlFor","onBlur","onChange","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.97877619.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Navigation.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Component} = require(\"react\");\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showing: false\r\n        }\r\n\r\n        this.side_panel = [\r\n            {'name': 'Account', 'url': 'account'},\r\n            {'name': 'Category', 'url': 'category'},\r\n            {'name': 'Help', 'url': 'help'},\r\n            {'name': 'Admin', 'url': 'admin'},\r\n        ];\r\n\r\n        this.navigate = [\r\n            {'name': 'Cart', 'url': 'cart'},\r\n            {'name': 'Login', 'url': 'login'},\r\n            {'name': 'Register', 'url': 'register'}\r\n        ];\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n    }\r\n\r\n    toggle(){\r\n        const isShowing = this.state.showing;\r\n        this.setState({\r\n            showing: !isShowing\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bar\">\r\n                    <div className=\"menu\" onClick={this.toggle}/>\r\n                    <div className={this.state.showing ? \"search-bar search-move\" : \"search-bar\"}>\r\n                        <div className=\"search\">\r\n                            <input type=\"text\" id=\"search\" placeholder=\"Search\"/>\r\n                        </div>\r\n                        <div className=\"search-icon\"/>\r\n                    </div>\r\n                    <ul className=\"right\">\r\n                        {\r\n                            this.navigate.map((item, index) => {\r\n                                return(\r\n                                    <li key={index}>\r\n                                        <div className=\"label\">{item.name}</div>\r\n                                        <Link to={item.url} className=\"link\"/>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className={this.state.showing ? \"side-panel show-panel\" : \"side-panel\"}>\r\n                    <ul>\r\n                        {\r\n                            this.side_panel.map((item,index) => {\r\n                                return(\r\n                                    <li className=\"item\" key={index}>\r\n                                        <div className=\"label\">{item.name}</div>\r\n                                        <div className=\"arrow\"/>\r\n                                        <Link to={item.url} className=\"link\"/>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, {Component} from \"react\";\r\nimport Navigation from \"../navigation/Navigation\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from \"react\";\r\nimport './Register.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            validation: {\r\n                un_err: false,\r\n                fn_err: false,\r\n                ln_err: false,\r\n                dob_err: false,\r\n                pass_err: false,\r\n                cp_err: false,\r\n            },\r\n            error: false,\r\n            filled: false,\r\n            initial: true\r\n        };\r\n\r\n        this.validate = this.validate.bind(this);\r\n        this.register = this.register.bind(this);\r\n    }\r\n\r\n    validate(e){\r\n        switch(e.target.id) {\r\n            case 'uname':\r\n                if(e.target.value === ''){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            un_err: true,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            un_err: false,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            case 'fname':\r\n                if(e.target.value === ''){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            fn_err: true,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            fn_err: false,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            case 'lname':\r\n                if(e.target.value === ''){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            ln_err: true,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            ln_err: false,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            case 'dob':\r\n                if(e.target.value === ''){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            dob_err: true,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            dob_err: false,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            case 'pass':\r\n                if(e.target.value === ''){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            pass_err: true,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            pass_err: false,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            case 'cpass':\r\n                if(e.target.value === document.getElementById('pass').value){\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            cp_err: false,\r\n                        })\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        validation: Object.assign({}, this.state.validation, {\r\n                            cp_err: true,\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            initial: false\r\n        });\r\n    }\r\n\r\n    register(){\r\n        const hasError = Object.keys(this.state.validation).some(val => this.state.validation[val]);\r\n        if(hasError){\r\n            this.setState({\r\n                error: true\r\n            });\r\n        }else{\r\n            if(this.state.initial){\r\n                this.setState({\r\n                    filled: true\r\n                });\r\n            }else{\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                error: false,\r\n                filled: false\r\n            });\r\n        },2500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className={this.state.error ? \"form_area onerror\" : \"form_area\"}>\r\n                    <form>\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"uname\">User Name</label>\r\n                            <input type=\"text\" id=\"uname\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.un_err ? <div className=\"error\">User Name is required</div> : null}\r\n                        </div>\r\n\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"fname\">First Name</label>\r\n                            <input type=\"text\" id=\"fname\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.fn_err ? <div className=\"error\">First Name is required</div> : null}\r\n                        </div>\r\n\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"lname\">Last Name</label>\r\n                            <input type=\"text\" id=\"lname\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.ln_err ? <div className=\"error\">Last Name is required</div>: null}\r\n                        </div>\r\n\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"dob\">Date of Birth</label>\r\n                            <input type=\"date\" id=\"dob\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.dob_err ? <div className=\"error\">Date of Birth is required</div>: null}\r\n                        </div>\r\n\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                            <input type=\"password\" id=\"pass\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.pass_err ? <div className=\"error\">Password is required</div> : null}\r\n                        </div>\r\n\r\n                        <div className=\"input-section\">\r\n                            <label htmlFor=\"cpass\">Confirm Password</label>\r\n                            <input type=\"password\" id=\"cpass\" className=\"inp\"\r\n                                   onBlur={this.validate} onChange={this.validate}/>\r\n                            {this.state.validation.cp_err ? <div className=\"error\">Password does not match</div> : null}\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"input-section\">\r\n                        {this.state.error ? <div className=\"submitError\">Please correct the errors!!</div> : null}\r\n                        {this.state.filled ? <div className=\"submitError\">Please fill the form!!</div> : null}\r\n                        <button className=\"submit\" onClick={this.register}>Register</button>\r\n                    </div>\r\n                    <div className=\"redirect\">\r\n                        <span>Already a User? </span>\r\n                        <Link className=\"linkLogin\" to={\"/login\"}> Login</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, {Component} from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Home from \"../home/Home\";\r\nimport Register from \"../register/Register\";\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/register' component={Register}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Routes from \"./components/routes/routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}